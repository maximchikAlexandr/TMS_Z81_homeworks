"""
1. Дан входной словарь
- Ключи словаря - строки
- Значениями ключей могут быть:
-- Строки
-- Словари
-- Списки

Все элементы-словари, как и родительский словарь, могут содержать строки, списки и другие вложенные словари
Все Элементы-списки могут содержать строки, словари и другие вложенные списки

Написать рекурсивную функцию, которая:
- Принимает на вход следующие аргументы:
-- 1 аргумент: исходный словарь
-- 2 аргумент: слово, которое нужно найти в словаре (строка)
-- аргумент deep с дефолтным целочисленным значением, отображающим текущий уровень вложенности (глубину) словаря
-- аргумент parent с дефолтным значением None, который сохраняет родителя (ключ словаря) на текущем уровне вложенности

- Делает обход словаря в глубину и поиск указанного значения
- Если значение найдено: печатает строку f"Значение {val} найдено на глубине {deep}"


* будет ли ваша функция искать слово до первого совпадения или найдет все имеющиеся совпадения - не важно
* понятие "уровень вложенности" или "глубина" касается только вложенных словарей!
"""


def recursive_search(target: dict | list | str,
                     pattern: str,
                     deep: int = -1,
                     parent: str | None = None) -> None:
    if isinstance(target, str):
        if target == pattern:
            print(f"Значение {pattern} найдено на глубине {deep}, {parent=}")
    elif isinstance(target, list):
        for elem in target:
            recursive_search(elem, pattern, deep, parent)
    elif isinstance(target, dict):
        deep += 1
        for key, value in target.items():
            recursive_search(value, pattern, deep, key)


""" Пример словаря: """
source_dict = {
    "key1": {
        "key2": {
            "key3": [
                "John",
                {
                    "key4": "Bob",
                    "key5": "Alex",
                    "key6": {
                        "key7": [
                            {
                                "key7": "Jessica",
                                "key8": {
                                    "key9": [
                                        "Alex"
                                    ]
                                }
                            }
                        ]
                    }
                }
            ]
        }
    },
    "key4": "Kate"
}

""" Результат работы функции: поиск слова 'Alex': """
recursive_search(source_dict, 'Alex')
# Found "Alex" on deep = 3, parent = key5
# Found "Alex" on deep = 6, parent = key9
